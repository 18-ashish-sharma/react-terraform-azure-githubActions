name: Deploy to stage

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node version 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install dependencies
        run: npm install
      - name: Generate build
        run: npm run build:stage
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-build
          path: build
  terraform_apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./provisioning/nonprod/stage
    steps:
      - uses: actions/checkout@v1
      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "1.1.3"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      - name: Verify Terraform version
        run: terraform --version

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init -input=false

      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_app_version: ${{ github.sha }}
        run: terraform apply -auto-approve -input=false
  deploy:
    runs-on: ubuntu-latest
    needs: [ build, terraform_apply ]
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: react-github-actions-build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-2
      - name: Deploy
        run: aws s3 sync ./react-github-actions-build s3://ptt-frontend-app-stage
